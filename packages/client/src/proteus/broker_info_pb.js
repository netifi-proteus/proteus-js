/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.exportSymbol('proto.io.netifi.proteus.broker.info.Broker', null, global);
goog.exportSymbol('proto.io.netifi.proteus.broker.info.Cluster', null, global);
goog.exportSymbol('proto.io.netifi.proteus.broker.info.Destination', null, global);
goog.exportSymbol('proto.io.netifi.proteus.broker.info.Event', null, global);
goog.exportSymbol('proto.io.netifi.proteus.broker.info.Event.Type', null, global);
goog.exportSymbol('proto.io.netifi.proteus.broker.info.Group', null, global);
goog.exportSymbol('proto.io.netifi.proteus.broker.info.Id', null, global);
goog.exportSymbol('proto.io.netifi.proteus.broker.info.Tag', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.netifi.proteus.broker.info.Tag = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.netifi.proteus.broker.info.Tag, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.netifi.proteus.broker.info.Tag.displayName = 'proto.io.netifi.proteus.broker.info.Tag';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.netifi.proteus.broker.info.Tag.prototype.toObject = function(opt_includeInstance) {
  return proto.io.netifi.proteus.broker.info.Tag.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.netifi.proteus.broker.info.Tag} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.netifi.proteus.broker.info.Tag.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.netifi.proteus.broker.info.Tag}
 */
proto.io.netifi.proteus.broker.info.Tag.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.netifi.proteus.broker.info.Tag;
  return proto.io.netifi.proteus.broker.info.Tag.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.netifi.proteus.broker.info.Tag} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.netifi.proteus.broker.info.Tag}
 */
proto.io.netifi.proteus.broker.info.Tag.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.netifi.proteus.broker.info.Tag.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.netifi.proteus.broker.info.Tag.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.netifi.proteus.broker.info.Tag} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.netifi.proteus.broker.info.Tag.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.io.netifi.proteus.broker.info.Tag.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.io.netifi.proteus.broker.info.Tag.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.io.netifi.proteus.broker.info.Tag.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.io.netifi.proteus.broker.info.Tag.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.netifi.proteus.broker.info.Id = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.netifi.proteus.broker.info.Id, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.netifi.proteus.broker.info.Id.displayName = 'proto.io.netifi.proteus.broker.info.Id';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.netifi.proteus.broker.info.Id.prototype.toObject = function(opt_includeInstance) {
  return proto.io.netifi.proteus.broker.info.Id.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.netifi.proteus.broker.info.Id} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.netifi.proteus.broker.info.Id.toObject = function(includeInstance, msg) {
  var f, obj = {
    first: jspb.Message.getFieldWithDefault(msg, 1, 0),
    second: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.netifi.proteus.broker.info.Id}
 */
proto.io.netifi.proteus.broker.info.Id.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.netifi.proteus.broker.info.Id;
  return proto.io.netifi.proteus.broker.info.Id.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.netifi.proteus.broker.info.Id} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.netifi.proteus.broker.info.Id}
 */
proto.io.netifi.proteus.broker.info.Id.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setFirst(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setSecond(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.netifi.proteus.broker.info.Id.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.netifi.proteus.broker.info.Id.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.netifi.proteus.broker.info.Id} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.netifi.proteus.broker.info.Id.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirst();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getSecond();
  if (f !== 0) {
    writer.writeFixed64(
      2,
      f
    );
  }
};


/**
 * optional fixed64 first = 1;
 * @return {number}
 */
proto.io.netifi.proteus.broker.info.Id.prototype.getFirst = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.io.netifi.proteus.broker.info.Id.prototype.setFirst = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed64 second = 2;
 * @return {number}
 */
proto.io.netifi.proteus.broker.info.Id.prototype.getSecond = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.io.netifi.proteus.broker.info.Id.prototype.setSecond = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.netifi.proteus.broker.info.Group = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.netifi.proteus.broker.info.Group.repeatedFields_, null);
};
goog.inherits(proto.io.netifi.proteus.broker.info.Group, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.netifi.proteus.broker.info.Group.displayName = 'proto.io.netifi.proteus.broker.info.Group';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.netifi.proteus.broker.info.Group.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.netifi.proteus.broker.info.Group.prototype.toObject = function(opt_includeInstance) {
  return proto.io.netifi.proteus.broker.info.Group.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.netifi.proteus.broker.info.Group} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.netifi.proteus.broker.info.Group.toObject = function(includeInstance, msg) {
  var f, obj = {
    group: jspb.Message.getFieldWithDefault(msg, 1, ""),
    broker: (f = msg.getBroker()) && proto.io.netifi.proteus.broker.info.Broker.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    proto.io.netifi.proteus.broker.info.Tag.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.netifi.proteus.broker.info.Group}
 */
proto.io.netifi.proteus.broker.info.Group.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.netifi.proteus.broker.info.Group;
  return proto.io.netifi.proteus.broker.info.Group.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.netifi.proteus.broker.info.Group} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.netifi.proteus.broker.info.Group}
 */
proto.io.netifi.proteus.broker.info.Group.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroup(value);
      break;
    case 2:
      var value = new proto.io.netifi.proteus.broker.info.Broker;
      reader.readMessage(value,proto.io.netifi.proteus.broker.info.Broker.deserializeBinaryFromReader);
      msg.setBroker(value);
      break;
    case 3:
      var value = new proto.io.netifi.proteus.broker.info.Tag;
      reader.readMessage(value,proto.io.netifi.proteus.broker.info.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.netifi.proteus.broker.info.Group.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.netifi.proteus.broker.info.Group.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.netifi.proteus.broker.info.Group} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.netifi.proteus.broker.info.Group.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBroker();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.netifi.proteus.broker.info.Broker.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.io.netifi.proteus.broker.info.Tag.serializeBinaryToWriter
    );
  }
};


/**
 * optional string group = 1;
 * @return {string}
 */
proto.io.netifi.proteus.broker.info.Group.prototype.getGroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.io.netifi.proteus.broker.info.Group.prototype.setGroup = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Broker broker = 2;
 * @return {?proto.io.netifi.proteus.broker.info.Broker}
 */
proto.io.netifi.proteus.broker.info.Group.prototype.getBroker = function() {
  return /** @type{?proto.io.netifi.proteus.broker.info.Broker} */ (
    jspb.Message.getWrapperField(this, proto.io.netifi.proteus.broker.info.Broker, 2));
};


/** @param {?proto.io.netifi.proteus.broker.info.Broker|undefined} value */
proto.io.netifi.proteus.broker.info.Group.prototype.setBroker = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.io.netifi.proteus.broker.info.Group.prototype.clearBroker = function() {
  this.setBroker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.io.netifi.proteus.broker.info.Group.prototype.hasBroker = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Tag tags = 3;
 * @return {!Array<!proto.io.netifi.proteus.broker.info.Tag>}
 */
proto.io.netifi.proteus.broker.info.Group.prototype.getTagsList = function() {
  return /** @type{!Array<!proto.io.netifi.proteus.broker.info.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.netifi.proteus.broker.info.Tag, 3));
};


/** @param {!Array<!proto.io.netifi.proteus.broker.info.Tag>} value */
proto.io.netifi.proteus.broker.info.Group.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.io.netifi.proteus.broker.info.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.netifi.proteus.broker.info.Tag}
 */
proto.io.netifi.proteus.broker.info.Group.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.io.netifi.proteus.broker.info.Tag, opt_index);
};


proto.io.netifi.proteus.broker.info.Group.prototype.clearTagsList = function() {
  this.setTagsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.netifi.proteus.broker.info.Destination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.netifi.proteus.broker.info.Destination.repeatedFields_, null);
};
goog.inherits(proto.io.netifi.proteus.broker.info.Destination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.netifi.proteus.broker.info.Destination.displayName = 'proto.io.netifi.proteus.broker.info.Destination';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.netifi.proteus.broker.info.Destination.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.netifi.proteus.broker.info.Destination.prototype.toObject = function(opt_includeInstance) {
  return proto.io.netifi.proteus.broker.info.Destination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.netifi.proteus.broker.info.Destination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.netifi.proteus.broker.info.Destination.toObject = function(includeInstance, msg) {
  var f, obj = {
    group: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destination: (f = msg.getDestination()) && proto.io.netifi.proteus.broker.info.Id.toObject(includeInstance, f),
    broker: (f = msg.getBroker()) && proto.io.netifi.proteus.broker.info.Broker.toObject(includeInstance, f),
    ipaddress: msg.getIpaddress_asB64(),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    proto.io.netifi.proteus.broker.info.Tag.toObject, includeInstance),
    accesskey: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.netifi.proteus.broker.info.Destination}
 */
proto.io.netifi.proteus.broker.info.Destination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.netifi.proteus.broker.info.Destination;
  return proto.io.netifi.proteus.broker.info.Destination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.netifi.proteus.broker.info.Destination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.netifi.proteus.broker.info.Destination}
 */
proto.io.netifi.proteus.broker.info.Destination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroup(value);
      break;
    case 2:
      var value = new proto.io.netifi.proteus.broker.info.Id;
      reader.readMessage(value,proto.io.netifi.proteus.broker.info.Id.deserializeBinaryFromReader);
      msg.setDestination(value);
      break;
    case 3:
      var value = new proto.io.netifi.proteus.broker.info.Broker;
      reader.readMessage(value,proto.io.netifi.proteus.broker.info.Broker.deserializeBinaryFromReader);
      msg.setBroker(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setIpaddress(value);
      break;
    case 5:
      var value = new proto.io.netifi.proteus.broker.info.Tag;
      reader.readMessage(value,proto.io.netifi.proteus.broker.info.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccesskey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.netifi.proteus.broker.info.Destination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.netifi.proteus.broker.info.Destination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.netifi.proteus.broker.info.Destination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.netifi.proteus.broker.info.Destination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.netifi.proteus.broker.info.Id.serializeBinaryToWriter
    );
  }
  f = message.getBroker();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.netifi.proteus.broker.info.Broker.serializeBinaryToWriter
    );
  }
  f = message.getIpaddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.io.netifi.proteus.broker.info.Tag.serializeBinaryToWriter
    );
  }
  f = message.getAccesskey();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional string group = 1;
 * @return {string}
 */
proto.io.netifi.proteus.broker.info.Destination.prototype.getGroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.io.netifi.proteus.broker.info.Destination.prototype.setGroup = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Id destination = 2;
 * @return {?proto.io.netifi.proteus.broker.info.Id}
 */
proto.io.netifi.proteus.broker.info.Destination.prototype.getDestination = function() {
  return /** @type{?proto.io.netifi.proteus.broker.info.Id} */ (
    jspb.Message.getWrapperField(this, proto.io.netifi.proteus.broker.info.Id, 2));
};


/** @param {?proto.io.netifi.proteus.broker.info.Id|undefined} value */
proto.io.netifi.proteus.broker.info.Destination.prototype.setDestination = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.io.netifi.proteus.broker.info.Destination.prototype.clearDestination = function() {
  this.setDestination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.io.netifi.proteus.broker.info.Destination.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Broker broker = 3;
 * @return {?proto.io.netifi.proteus.broker.info.Broker}
 */
proto.io.netifi.proteus.broker.info.Destination.prototype.getBroker = function() {
  return /** @type{?proto.io.netifi.proteus.broker.info.Broker} */ (
    jspb.Message.getWrapperField(this, proto.io.netifi.proteus.broker.info.Broker, 3));
};


/** @param {?proto.io.netifi.proteus.broker.info.Broker|undefined} value */
proto.io.netifi.proteus.broker.info.Destination.prototype.setBroker = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.io.netifi.proteus.broker.info.Destination.prototype.clearBroker = function() {
  this.setBroker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.io.netifi.proteus.broker.info.Destination.prototype.hasBroker = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes ipAddress = 4;
 * @return {!(string|Uint8Array)}
 */
proto.io.netifi.proteus.broker.info.Destination.prototype.getIpaddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes ipAddress = 4;
 * This is a type-conversion wrapper around `getIpaddress()`
 * @return {string}
 */
proto.io.netifi.proteus.broker.info.Destination.prototype.getIpaddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getIpaddress()));
};


/**
 * optional bytes ipAddress = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getIpaddress()`
 * @return {!Uint8Array}
 */
proto.io.netifi.proteus.broker.info.Destination.prototype.getIpaddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getIpaddress()));
};


/** @param {!(string|Uint8Array)} value */
proto.io.netifi.proteus.broker.info.Destination.prototype.setIpaddress = function(value) {
  jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * repeated Tag tags = 5;
 * @return {!Array<!proto.io.netifi.proteus.broker.info.Tag>}
 */
proto.io.netifi.proteus.broker.info.Destination.prototype.getTagsList = function() {
  return /** @type{!Array<!proto.io.netifi.proteus.broker.info.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.netifi.proteus.broker.info.Tag, 5));
};


/** @param {!Array<!proto.io.netifi.proteus.broker.info.Tag>} value */
proto.io.netifi.proteus.broker.info.Destination.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.io.netifi.proteus.broker.info.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.netifi.proteus.broker.info.Tag}
 */
proto.io.netifi.proteus.broker.info.Destination.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.io.netifi.proteus.broker.info.Tag, opt_index);
};


proto.io.netifi.proteus.broker.info.Destination.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional int64 accessKey = 6;
 * @return {number}
 */
proto.io.netifi.proteus.broker.info.Destination.prototype.getAccesskey = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.io.netifi.proteus.broker.info.Destination.prototype.setAccesskey = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.netifi.proteus.broker.info.Broker = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.netifi.proteus.broker.info.Broker.repeatedFields_, null);
};
goog.inherits(proto.io.netifi.proteus.broker.info.Broker, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.netifi.proteus.broker.info.Broker.displayName = 'proto.io.netifi.proteus.broker.info.Broker';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.netifi.proteus.broker.info.Broker.repeatedFields_ = [15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.toObject = function(opt_includeInstance) {
  return proto.io.netifi.proteus.broker.info.Broker.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.netifi.proteus.broker.info.Broker} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.netifi.proteus.broker.info.Broker.toObject = function(includeInstance, msg) {
  var f, obj = {
    brokerid: (f = msg.getBrokerid()) && proto.io.netifi.proteus.broker.info.Id.toObject(includeInstance, f),
    ipaddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    port: jspb.Message.getFieldWithDefault(msg, 3, 0),
    clusteraddress: jspb.Message.getFieldWithDefault(msg, 6, ""),
    clusterport: jspb.Message.getFieldWithDefault(msg, 4, 0),
    adminaddress: jspb.Message.getFieldWithDefault(msg, 7, ""),
    adminport: jspb.Message.getFieldWithDefault(msg, 5, 0),
    websocketaddress: jspb.Message.getFieldWithDefault(msg, 8, ""),
    websocketport: jspb.Message.getFieldWithDefault(msg, 9, 0),
    tcpaddress: jspb.Message.getFieldWithDefault(msg, 10, ""),
    tcpport: jspb.Message.getFieldWithDefault(msg, 11, 0),
    webconsoleaddress: jspb.Message.getFieldWithDefault(msg, 12, ""),
    webconsoleport: jspb.Message.getFieldWithDefault(msg, 13, 0),
    cluster: (f = msg.getCluster()) && proto.io.netifi.proteus.broker.info.Cluster.toObject(includeInstance, f),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    proto.io.netifi.proteus.broker.info.Tag.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.netifi.proteus.broker.info.Broker}
 */
proto.io.netifi.proteus.broker.info.Broker.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.netifi.proteus.broker.info.Broker;
  return proto.io.netifi.proteus.broker.info.Broker.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.netifi.proteus.broker.info.Broker} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.netifi.proteus.broker.info.Broker}
 */
proto.io.netifi.proteus.broker.info.Broker.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.netifi.proteus.broker.info.Id;
      reader.readMessage(value,proto.io.netifi.proteus.broker.info.Id.deserializeBinaryFromReader);
      msg.setBrokerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpaddress(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusteraddress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClusterport(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminaddress(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAdminport(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebsocketaddress(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWebsocketport(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTcpaddress(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTcpport(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebconsoleaddress(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWebconsoleport(value);
      break;
    case 14:
      var value = new proto.io.netifi.proteus.broker.info.Cluster;
      reader.readMessage(value,proto.io.netifi.proteus.broker.info.Cluster.deserializeBinaryFromReader);
      msg.setCluster(value);
      break;
    case 15:
      var value = new proto.io.netifi.proteus.broker.info.Tag;
      reader.readMessage(value,proto.io.netifi.proteus.broker.info.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.netifi.proteus.broker.info.Broker.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.netifi.proteus.broker.info.Broker} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.netifi.proteus.broker.info.Broker.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBrokerid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.netifi.proteus.broker.info.Id.serializeBinaryToWriter
    );
  }
  f = message.getIpaddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getClusteraddress();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getClusterport();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getAdminaddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAdminport();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getWebsocketaddress();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getWebsocketport();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getTcpaddress();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTcpport();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getWebconsoleaddress();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getWebconsoleport();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getCluster();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.io.netifi.proteus.broker.info.Cluster.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.io.netifi.proteus.broker.info.Tag.serializeBinaryToWriter
    );
  }
};


/**
 * optional Id brokerId = 1;
 * @return {?proto.io.netifi.proteus.broker.info.Id}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.getBrokerid = function() {
  return /** @type{?proto.io.netifi.proteus.broker.info.Id} */ (
    jspb.Message.getWrapperField(this, proto.io.netifi.proteus.broker.info.Id, 1));
};


/** @param {?proto.io.netifi.proteus.broker.info.Id|undefined} value */
proto.io.netifi.proteus.broker.info.Broker.prototype.setBrokerid = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.io.netifi.proteus.broker.info.Broker.prototype.clearBrokerid = function() {
  this.setBrokerid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.hasBrokerid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ipAddress = 2;
 * @return {string}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.getIpaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.io.netifi.proteus.broker.info.Broker.prototype.setIpaddress = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 port = 3;
 * @return {number}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.io.netifi.proteus.broker.info.Broker.prototype.setPort = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string clusterAddress = 6;
 * @return {string}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.getClusteraddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.io.netifi.proteus.broker.info.Broker.prototype.setClusteraddress = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 clusterPort = 4;
 * @return {number}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.getClusterport = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.io.netifi.proteus.broker.info.Broker.prototype.setClusterport = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string adminAddress = 7;
 * @return {string}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.getAdminaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.io.netifi.proteus.broker.info.Broker.prototype.setAdminaddress = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 adminPort = 5;
 * @return {number}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.getAdminport = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.io.netifi.proteus.broker.info.Broker.prototype.setAdminport = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string webSocketAddress = 8;
 * @return {string}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.getWebsocketaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.io.netifi.proteus.broker.info.Broker.prototype.setWebsocketaddress = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int32 webSocketPort = 9;
 * @return {number}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.getWebsocketport = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.io.netifi.proteus.broker.info.Broker.prototype.setWebsocketport = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string tcpAddress = 10;
 * @return {string}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.getTcpaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.io.netifi.proteus.broker.info.Broker.prototype.setTcpaddress = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 tcpPort = 11;
 * @return {number}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.getTcpport = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.io.netifi.proteus.broker.info.Broker.prototype.setTcpport = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string webConsoleAddress = 12;
 * @return {string}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.getWebconsoleaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.io.netifi.proteus.broker.info.Broker.prototype.setWebconsoleaddress = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional int32 webConsolePort = 13;
 * @return {number}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.getWebconsoleport = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.io.netifi.proteus.broker.info.Broker.prototype.setWebconsoleport = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional Cluster cluster = 14;
 * @return {?proto.io.netifi.proteus.broker.info.Cluster}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.getCluster = function() {
  return /** @type{?proto.io.netifi.proteus.broker.info.Cluster} */ (
    jspb.Message.getWrapperField(this, proto.io.netifi.proteus.broker.info.Cluster, 14));
};


/** @param {?proto.io.netifi.proteus.broker.info.Cluster|undefined} value */
proto.io.netifi.proteus.broker.info.Broker.prototype.setCluster = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.io.netifi.proteus.broker.info.Broker.prototype.clearCluster = function() {
  this.setCluster(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.hasCluster = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated Tag tags = 15;
 * @return {!Array<!proto.io.netifi.proteus.broker.info.Tag>}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.getTagsList = function() {
  return /** @type{!Array<!proto.io.netifi.proteus.broker.info.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.netifi.proteus.broker.info.Tag, 15));
};


/** @param {!Array<!proto.io.netifi.proteus.broker.info.Tag>} value */
proto.io.netifi.proteus.broker.info.Broker.prototype.setTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.io.netifi.proteus.broker.info.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.netifi.proteus.broker.info.Tag}
 */
proto.io.netifi.proteus.broker.info.Broker.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.io.netifi.proteus.broker.info.Tag, opt_index);
};


proto.io.netifi.proteus.broker.info.Broker.prototype.clearTagsList = function() {
  this.setTagsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.netifi.proteus.broker.info.Cluster = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.netifi.proteus.broker.info.Cluster, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.netifi.proteus.broker.info.Cluster.displayName = 'proto.io.netifi.proteus.broker.info.Cluster';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.netifi.proteus.broker.info.Cluster.prototype.toObject = function(opt_includeInstance) {
  return proto.io.netifi.proteus.broker.info.Cluster.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.netifi.proteus.broker.info.Cluster} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.netifi.proteus.broker.info.Cluster.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterid: (f = msg.getClusterid()) && proto.io.netifi.proteus.broker.info.Id.toObject(includeInstance, f),
    clustername: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.netifi.proteus.broker.info.Cluster}
 */
proto.io.netifi.proteus.broker.info.Cluster.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.netifi.proteus.broker.info.Cluster;
  return proto.io.netifi.proteus.broker.info.Cluster.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.netifi.proteus.broker.info.Cluster} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.netifi.proteus.broker.info.Cluster}
 */
proto.io.netifi.proteus.broker.info.Cluster.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.netifi.proteus.broker.info.Id;
      reader.readMessage(value,proto.io.netifi.proteus.broker.info.Id.deserializeBinaryFromReader);
      msg.setClusterid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClustername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.netifi.proteus.broker.info.Cluster.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.netifi.proteus.broker.info.Cluster.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.netifi.proteus.broker.info.Cluster} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.netifi.proteus.broker.info.Cluster.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.netifi.proteus.broker.info.Id.serializeBinaryToWriter
    );
  }
  f = message.getClustername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Id clusterId = 1;
 * @return {?proto.io.netifi.proteus.broker.info.Id}
 */
proto.io.netifi.proteus.broker.info.Cluster.prototype.getClusterid = function() {
  return /** @type{?proto.io.netifi.proteus.broker.info.Id} */ (
    jspb.Message.getWrapperField(this, proto.io.netifi.proteus.broker.info.Id, 1));
};


/** @param {?proto.io.netifi.proteus.broker.info.Id|undefined} value */
proto.io.netifi.proteus.broker.info.Cluster.prototype.setClusterid = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.io.netifi.proteus.broker.info.Cluster.prototype.clearClusterid = function() {
  this.setClusterid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.io.netifi.proteus.broker.info.Cluster.prototype.hasClusterid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string clusterName = 2;
 * @return {string}
 */
proto.io.netifi.proteus.broker.info.Cluster.prototype.getClustername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.io.netifi.proteus.broker.info.Cluster.prototype.setClustername = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.netifi.proteus.broker.info.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.netifi.proteus.broker.info.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.netifi.proteus.broker.info.Event.displayName = 'proto.io.netifi.proteus.broker.info.Event';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.netifi.proteus.broker.info.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.io.netifi.proteus.broker.info.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.netifi.proteus.broker.info.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.netifi.proteus.broker.info.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    broker: (f = msg.getBroker()) && proto.io.netifi.proteus.broker.info.Broker.toObject(includeInstance, f),
    destination: (f = msg.getDestination()) && proto.io.netifi.proteus.broker.info.Destination.toObject(includeInstance, f),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.netifi.proteus.broker.info.Event}
 */
proto.io.netifi.proteus.broker.info.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.netifi.proteus.broker.info.Event;
  return proto.io.netifi.proteus.broker.info.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.netifi.proteus.broker.info.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.netifi.proteus.broker.info.Event}
 */
proto.io.netifi.proteus.broker.info.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.io.netifi.proteus.broker.info.Event.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.io.netifi.proteus.broker.info.Broker;
      reader.readMessage(value,proto.io.netifi.proteus.broker.info.Broker.deserializeBinaryFromReader);
      msg.setBroker(value);
      break;
    case 3:
      var value = new proto.io.netifi.proteus.broker.info.Destination;
      reader.readMessage(value,proto.io.netifi.proteus.broker.info.Destination.deserializeBinaryFromReader);
      msg.setDestination(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.netifi.proteus.broker.info.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.netifi.proteus.broker.info.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.netifi.proteus.broker.info.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.netifi.proteus.broker.info.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getBroker();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.netifi.proteus.broker.info.Broker.serializeBinaryToWriter
    );
  }
  f = message.getDestination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.netifi.proteus.broker.info.Destination.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.io.netifi.proteus.broker.info.Event.Type = {
  JOIN: 0,
  LEAVE: 1
};

/**
 * optional Type type = 1;
 * @return {!proto.io.netifi.proteus.broker.info.Event.Type}
 */
proto.io.netifi.proteus.broker.info.Event.prototype.getType = function() {
  return /** @type {!proto.io.netifi.proteus.broker.info.Event.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.io.netifi.proteus.broker.info.Event.Type} value */
proto.io.netifi.proteus.broker.info.Event.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Broker broker = 2;
 * @return {?proto.io.netifi.proteus.broker.info.Broker}
 */
proto.io.netifi.proteus.broker.info.Event.prototype.getBroker = function() {
  return /** @type{?proto.io.netifi.proteus.broker.info.Broker} */ (
    jspb.Message.getWrapperField(this, proto.io.netifi.proteus.broker.info.Broker, 2));
};


/** @param {?proto.io.netifi.proteus.broker.info.Broker|undefined} value */
proto.io.netifi.proteus.broker.info.Event.prototype.setBroker = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.io.netifi.proteus.broker.info.Event.prototype.clearBroker = function() {
  this.setBroker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.io.netifi.proteus.broker.info.Event.prototype.hasBroker = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Destination destination = 3;
 * @return {?proto.io.netifi.proteus.broker.info.Destination}
 */
proto.io.netifi.proteus.broker.info.Event.prototype.getDestination = function() {
  return /** @type{?proto.io.netifi.proteus.broker.info.Destination} */ (
    jspb.Message.getWrapperField(this, proto.io.netifi.proteus.broker.info.Destination, 3));
};


/** @param {?proto.io.netifi.proteus.broker.info.Destination|undefined} value */
proto.io.netifi.proteus.broker.info.Event.prototype.setDestination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.io.netifi.proteus.broker.info.Event.prototype.clearDestination = function() {
  this.setDestination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.io.netifi.proteus.broker.info.Event.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.netifi.proteus.broker.info.Event.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.io.netifi.proteus.broker.info.Event.prototype.setTimestamp = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.io.netifi.proteus.broker.info.Event.prototype.clearTimestamp = function() {
  this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.io.netifi.proteus.broker.info.Event.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.io.netifi.proteus.broker.info);
